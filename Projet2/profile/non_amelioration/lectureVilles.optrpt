Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C++ Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 18.0.1.163 Build 20171018

Compiler options: -g -std=c++11 -qopt-report=3 -qopt-report-phase=loop,vec,par -qopt-report-annotate=html -O3

Begin optimization report for: lectureVilles(int, std::string *&, int *&, float *&, float *&, int &)

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /auto/q/qin/Documents/MAE31/TD2/HighPerformanceComputing/Projet2/lectureVilles.cpp(27,27)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /auto/q/qin/Documents/MAE31/TD2/HighPerformanceComputing/Projet2/lectureVilles.cpp(40,28)
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 6 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 1.960 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at /auto/q/qin/Documents/MAE31/TD2/HighPerformanceComputing/Projet2/lectureVilles.cpp(40,28)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at /auto/q/qin/Documents/MAE31/TD2/HighPerformanceComputing/Projet2/lectureVilles.cpp(52,20)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/4.7/bits/basic_ios.h(452,7) inlined into /auto/q/qin/Documents/MAE31/TD2/HighPerformanceComputing/Projet2/lectureVilles.cpp(52,20)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 0.800 
      remark #15488: --- end vector cost summary ---
      remark #25436: completely unrolled by 4  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.7/bits/basic_ios.h(452,7) inlined into /auto/q/qin/Documents/MAE31/TD2/HighPerformanceComputing/Projet2/lectureVilles.cpp(52,20)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 0.800 
      remark #15488: --- end vector cost summary ---
      remark #25436: completely unrolled by 4  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.7/bits/basic_ios.h(452,7) inlined into /auto/q/qin/Documents/MAE31/TD2/HighPerformanceComputing/Projet2/lectureVilles.cpp(52,20)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 0.800 
      remark #15488: --- end vector cost summary ---
      remark #25436: completely unrolled by 4  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.7/bits/basic_ios.h(452,7) inlined into /auto/q/qin/Documents/MAE31/TD2/HighPerformanceComputing/Projet2/lectureVilles.cpp(52,20)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 0.800 
      remark #15488: --- end vector cost summary ---
      remark #25436: completely unrolled by 4  
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.7/streambuf(461,7) inlined into /auto/q/qin/Documents/MAE31/TD2/HighPerformanceComputing/Projet2/lectureVilles.cpp(52,20)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 0.850 
      remark #15488: --- end vector cost summary ---
      remark #25436: completely unrolled by 6  
   LOOP END
LOOP END

LOOP BEGIN at /auto/q/qin/Documents/MAE31/TD2/HighPerformanceComputing/Projet2/lectureVilles.cpp(53,27)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /auto/q/qin/Documents/MAE31/TD2/HighPerformanceComputing/Projet2/lectureVilles.cpp(77,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.7/bits/basic_ios.h(274,22) ]
LOOP END

LOOP BEGIN at /auto/q/qin/Documents/MAE31/TD2/HighPerformanceComputing/Projet2/lectureVilles.cpp(92,5)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at /auto/q/qin/Documents/MAE31/TD2/HighPerformanceComputing/Projet2/lectureVilles.cpp(52,20)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.7/bits/basic_ios.h(274,22) ]
LOOP END

LOOP BEGIN at /auto/q/qin/Documents/MAE31/TD2/HighPerformanceComputing/Projet2/lectureVilles.cpp(52,20)
   remark #15308: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END


Non-optimizable loops:


LOOP BEGIN at /usr/include/c++/4.7/bits/basic_ios.h(274,22) inlined into /auto/q/qin/Documents/MAE31/TD2/HighPerformanceComputing/Projet2/lectureVilles.cpp(37,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.7/bits/locale_facets.h(871,8) ]
LOOP END

LOOP BEGIN at /auto/q/qin/Documents/MAE31/TD2/HighPerformanceComputing/Projet2/lectureVilles.cpp(77,5)
   remark #15333: loop was not vectorized: exception handling for a call prevents vectorization   [ /usr/include/c++/4.7/bits/locale_facets.h(871,8) ]
LOOP END
===========================================================================
